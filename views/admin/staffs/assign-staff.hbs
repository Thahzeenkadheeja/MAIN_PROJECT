<style>
    .custum-file-upload {
        height: 200px;
        width: 300px;
        display: flex;
        flex-direction: column;
        align-items: space-between;
        gap: 20px;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border: 2px dashed #cacaca;
        background-color: rgba(255, 255, 255, 1);
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0px 48px 35px -48px rgba(0, 0, 0, 0.1);
    }

    .custum-file-upload .icon {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .custum-file-upload .icon svg {
        height: 80px;
        fill: rgba(75, 85, 99, 1);
    }

    .custum-file-upload .text {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .custum-file-upload .text span {
        font-weight: 400;
        color: rgba(75, 85, 99, 1);
    }

    .custum-file-upload input {
        display: none;
    }
</style>

<main id="main" class="main">

    <div class="pagetitle">
        <h1>Allocate staff</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin">Home</a></li>
                <li class="breadcrumb-item">staff</li>
                <li class="breadcrumb-item active">Allocate staff</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->
    <section class="section">
        <div class="row">
            <div class="col-lg-7">
                <div class="card">
                    <div class="card-body">
                        {{!-- <h5 class="card-title">Multi Columns Form</h5> --}}

                        <!-- Multi Columns Form -->
                        <form class="row g-3 mt-3" action="/admin/staffs/assign-staff" method="POST">
                            <div class="col-md-12">
                                <label for="inputState" class="form-label">Select Staff</label>
                                <select id="inputState" name="staff" class="form-select" required>
                                    <option selected disabled>Choose...</option>
                                    {{#each staffs}}
                                    <option value="{{this._id}}">{{this.staffname}}</option>
                                    {{/each}}
                                </select>
                            </div>

                            <div class="col-md-12">
                                <label for="inputState" class="form-label">For User</label>
                                <select id="inputState" name="order" class="form-select" required>
                                    <option selected disabled>Choose...</option>
                                    {{#each orders}}
                                    <option value="{{this._id}}">{{user.Fname}} - {{deliveryDetails.Email}} -{{deliveryDetails.Email}} -{{deliveryDetails.checkin}} (checkin)
                                    </option>
                                    {{/each}}
                                </select>
                            </div>
                    </div>
                </div>

            </div>




        </div>

    </section>
    <div class="mb-4" style="float: inline-end;
">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="reset" class="btn btn-secondary">Reset</button>
    </div>


</main><!-- End #main -->


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Include jQuery -->

<script>
    $(document).ready(function () {
        // Check email availability
        $("#inputEmail5").on("blur", function () {
            let email = $(this).val();
            if (email) {
                $.ajax({
                    url: "/admin/check-email",
                    method: "POST",
                    data: { email: email },
                    success: function (response) {
                        if (response.exists) {
                            $("#emailError").text("This email is already registered.");
                        } else {
                            $("#emailError").text("");
                        }
                    }
                });
            } else {
                $("#emailError").text("");
            }
        });

        // Check phone number availability
        $("#inputPhone").on("blur", function () {
            let phone = $(this).val();
            if (phone.length === 10) {
                $.ajax({
                    url: "/admin/check-phone",
                    method: "POST",
                    data: { phone: phone },
                    success: function (response) {
                        if (response.exists) {
                            $("#phoneError").text("This phone number is already registered.");
                        } else {
                            $("#phoneError").text("");
                        }
                    }
                });
            } else {
                $("#phoneError").text("Phone number must be exactly 10 digits.");
            }
        });

        // Check username availability
        $("#inputUsername").on("blur", function () {
            let username = $(this).val();
            if (username.length >= 3) {
                $.ajax({
                    url: "/admin/check-username",
                    method: "POST",
                    data: { username: username },
                    success: function (response) {
                        if (response.exists) {
                            $("#usernameError").text("This username is already taken.");
                        } else {
                            $("#usernameError").text("");
                        }
                    }
                });
            } else {
                $("#usernameError").text("Username must be at least 3 characters.");
            }
        });
    });
</script>